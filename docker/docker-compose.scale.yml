version: '3.8'

services:
  # Redis for distributed caching and session management
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - pynucleus-network

  # Load balancer (nginx)
  load-balancer:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
      - api-3
    networks:
      - pynucleus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PyNucleus API instances (scaled horizontally)
  api-1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYNUCLEUS_INSTANCE_ID=api-1
      - PYNUCLEUS_API_KEY=production
      - PYTHONPATH=/app/src
      - FLASK_ENV=production
      - GUNICORN_WORKERS=4
      - GUNICORN_THREADS=2
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../data:/app/data:ro
      - ../logs:/app/logs
      - ../configs:/app/configs:ro
    networks:
      - pynucleus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  api-2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYNUCLEUS_INSTANCE_ID=api-2
      - PYNUCLEUS_API_KEY=production
      - PYTHONPATH=/app/src
      - FLASK_ENV=production
      - GUNICORN_WORKERS=4
      - GUNICORN_THREADS=2
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../data:/app/data:ro
      - ../logs:/app/logs
      - ../configs:/app/configs:ro
    networks:
      - pynucleus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  api-3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYNUCLEUS_INSTANCE_ID=api-3
      - PYNUCLEUS_API_KEY=production
      - PYTHONPATH=/app/src
      - FLASK_ENV=production
      - GUNICORN_WORKERS=4
      - GUNICORN_THREADS=2
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../data:/app/data:ro
      - ../logs:/app/logs
      - ../configs:/app/configs:ro
    networks:
      - pynucleus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Model service (shared by all API instances)
  model:
    build:
      context: .
      dockerfile: Dockerfile.model
    environment:
      - PYTHONPATH=/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pynucleus-network
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

  # Scaling manager service
  scaling-manager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.scaling
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PYNUCLEUS_API_KEY=production
      - PYTHONPATH=/app/src
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../logs:/app/logs
      - ../configs:/app/configs:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - pynucleus-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  redis_data:

networks:
  pynucleus-network:
    driver: bridge 